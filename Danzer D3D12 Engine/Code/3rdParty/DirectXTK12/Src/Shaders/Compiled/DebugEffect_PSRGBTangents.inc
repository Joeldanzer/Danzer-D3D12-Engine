#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   x   
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float       
; COLOR                    0   xyzw        3     NONE   float      w
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: Compiled\DebugEffect_PSRGBTangents.pdb
; shader hash: e5bf964a7baaf7103897bb1703d6ae14
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 4, 5, 6 }
;   output 1 depends on inputs: { 0, 4, 5, 6 }
;   output 2 depends on inputs: { 0, 4, 5, 6 }
;   output 3 depends on inputs: { 15 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

define void @PSRGBTangents() {
  %1 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.unary.f32(i32 83, float %2)  ; DerivCoarseX(value)
  %7 = call float @dx.op.unary.f32(i32 83, float %3)  ; DerivCoarseX(value)
  %8 = call float @dx.op.unary.f32(i32 83, float %4)  ; DerivCoarseX(value)
  %9 = call float @dx.op.unary.f32(i32 84, float %2)  ; DerivCoarseY(value)
  %10 = call float @dx.op.unary.f32(i32 84, float %3)  ; DerivCoarseY(value)
  %11 = call float @dx.op.unary.f32(i32 84, float %4)  ; DerivCoarseY(value)
  %12 = call float @dx.op.unary.f32(i32 83, float %5)  ; DerivCoarseX(value)
  %13 = call float @dx.op.unary.f32(i32 84, float %5)  ; DerivCoarseY(value)
  %14 = fmul fast float %11, %7
  %15 = fmul fast float %10, %8
  %16 = fsub fast float %14, %15
  %17 = fmul fast float %9, %8
  %18 = fmul fast float %11, %6
  %19 = fsub fast float %17, %18
  %20 = fmul fast float %10, %6
  %21 = fmul fast float %9, %7
  %22 = fsub fast float %20, %21
  %23 = fmul fast float %22, %10
  %24 = fmul fast float %19, %11
  %25 = fsub fast float %23, %24
  %26 = fmul fast float %16, %11
  %27 = fmul fast float %22, %9
  %28 = fsub fast float %26, %27
  %29 = fmul fast float %19, %9
  %30 = fmul fast float %16, %10
  %31 = fsub fast float %29, %30
  %32 = fmul fast float %19, %8
  %33 = fmul fast float %22, %7
  %34 = fsub fast float %32, %33
  %35 = fmul fast float %22, %6
  %36 = fmul fast float %16, %8
  %37 = fsub fast float %35, %36
  %38 = fmul fast float %16, %7
  %39 = fmul fast float %19, %6
  %40 = fsub fast float %38, %39
  %41 = fmul fast float %25, %12
  %42 = call float @dx.op.tertiary.f32(i32 46, float %13, float %34, float %41)  ; FMad(a,b,c)
  %43 = fmul fast float %28, %12
  %44 = call float @dx.op.tertiary.f32(i32 46, float %13, float %37, float %43)  ; FMad(a,b,c)
  %45 = fmul fast float %31, %12
  %46 = call float @dx.op.tertiary.f32(i32 46, float %13, float %40, float %45)  ; FMad(a,b,c)
  %47 = call float @dx.op.dot3.f32(i32 55, float %42, float %44, float %46, float %42, float %44, float %46)  ; Dot3(ax,ay,az,bx,by,bz)
  %48 = call float @dx.op.unary.f32(i32 25, float %47)  ; Rsqrt(value)
  %49 = fmul fast float %48, %42
  %50 = fmul fast float %48, %44
  %51 = fmul fast float %48, %46
  %52 = call float @dx.op.dot3.f32(i32 55, float %49, float %50, float %51, float %49, float %50, float %51)  ; Dot3(ax,ay,az,bx,by,bz)
  %53 = call float @dx.op.unary.f32(i32 25, float %52)  ; Rsqrt(value)
  %54 = fmul fast float %49, 5.000000e-01
  %55 = fmul fast float %54, %53
  %56 = fmul fast float %50, 5.000000e-01
  %57 = fmul fast float %56, %53
  %58 = fmul fast float %51, 5.000000e-01
  %59 = fmul fast float %58, %53
  %60 = fadd fast float %55, 5.000000e-01
  %61 = fadd fast float %57, 5.000000e-01
  %62 = fadd fast float %59, 5.000000e-01
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %60)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %61)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %62)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %1)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.viewIdState = !{!4}
!dx.entryPoints = !{!5}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 6}
!3 = !{!"ps", i32 6, i32 0}
!4 = !{[18 x i32] [i32 16, i32 4, i32 7, i32 0, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8]}
!5 = !{void ()* @PSRGBTangents, !"PSRGBTangents", !6, null, null}
!6 = !{!7, !18, null}
!7 = !{!8, !11, !14, !16}
!8 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !9, i8 2, i32 1, i8 2, i32 0, i8 0, !10}
!9 = !{i32 0}
!10 = !{i32 3, i32 1}
!11 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 1, i8 0, !13}
!12 = !{i32 1}
!13 = !{i32 3, i32 7}
!14 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !15, i8 2, i32 1, i8 3, i32 2, i8 0, null}
!15 = !{i32 2}
!16 = !{i32 3, !"COLOR", i8 9, i8 0, !9, i8 2, i32 1, i8 4, i32 3, i8 0, !17}
!17 = !{i32 3, i32 8}
!18 = !{!19}
!19 = !{i32 0, !"SV_Target", i8 9, i8 16, !9, i8 0, i32 1, i8 4, i32 0, i8 0, !20}
!20 = !{i32 3, i32 15}

#endif

const unsigned char DebugEffect_PSRGBTangents[] = {
  0x44, 0x58, 0x42, 0x43, 0xa4, 0x3b, 0xd8, 0xe4, 0x55, 0x8a, 0x4c, 0xb0,
  0x50, 0x30, 0x6a, 0x90, 0x3b, 0xb9, 0x7e, 0x7f, 0x01, 0x00, 0x00, 0x00,
  0xf7, 0x09, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x3b, 0x01, 0x00, 0x00,
  0x47, 0x02, 0x00, 0x00, 0x7f, 0x02, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00,
  0xcf, 0x02, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xa9, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x91, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43,
  0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x32, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
  0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67,
  0x65, 0x74, 0x00, 0x50, 0x53, 0x56, 0x30, 0x04, 0x01, 0x00, 0x00, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x04, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00, 0x03,
  0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
  0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03,
  0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
  0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0x30,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x1d,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x26, 0x00, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c,
  0x44, 0x65, 0x62, 0x75, 0x67, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f,
  0x50, 0x53, 0x52, 0x47, 0x42, 0x54, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74,
  0x73, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe5, 0xbf, 0x96, 0x4a, 0x7b,
  0xaa, 0xf7, 0x10, 0x38, 0x97, 0xbb, 0x17, 0x03, 0xd6, 0xae, 0x14, 0x44,
  0x58, 0x49, 0x4c, 0x20, 0x07, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xc8,
  0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x08, 0x07, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21,
  0x0c, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41,
  0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25,
  0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x14, 0x45, 0x02, 0x42,
  0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a,
  0x32, 0x52, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00,
  0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x22, 0xc4, 0x50, 0x41,
  0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x29, 0x46, 0x06, 0x51,
  0x18, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x20, 0x01, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x00, 0x00, 0x00, 0x89,
  0x20, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48, 0x09, 0x20,
  0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22, 0xe3, 0x84,
  0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4, 0x4c, 0x10,
  0x48, 0x23, 0x00, 0x25, 0x00, 0x14, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60,
  0x8e, 0x00, 0x29, 0xc6, 0x20, 0x84, 0x14, 0x42, 0xa6, 0x18, 0x80, 0x10,
  0x52, 0x06, 0xa1, 0x82, 0x0c, 0x32, 0xc6, 0x18, 0x63, 0x90, 0x2a, 0xc3,
  0x20, 0x83, 0x58, 0x29, 0x06, 0x19, 0x63, 0x90, 0x1b, 0x08, 0x48, 0x09,
  0x02, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36,
  0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e,
  0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07,
  0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07,
  0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c,
  0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0xf2, 0x28, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x30, 0xe4, 0x61, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32,
  0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6,
  0x04, 0x43, 0x22, 0x25, 0x30, 0x02, 0x50, 0x0c, 0x65, 0x50, 0x0e, 0x45,
  0x50, 0x10, 0xe5, 0x41, 0xa5, 0x24, 0x46, 0x00, 0x8a, 0xa0, 0x10, 0xca,
  0xa0, 0x40, 0x28, 0x8e, 0x25, 0x41, 0xc4, 0x01, 0x00, 0xc0, 0x71, 0x1c,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x79,
  0x18, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46,
  0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b,
  0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1,
  0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa,
  0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10,
  0x04, 0x13, 0x04, 0xc2, 0x98, 0x20, 0x10, 0xc7, 0x06, 0x61, 0x20, 0x26,
  0x08, 0x04, 0xb2, 0x41, 0x18, 0x0c, 0x0a, 0x70, 0x73, 0x1b, 0x06, 0xc4,
  0x20, 0x26, 0x08, 0x11, 0xb5, 0x21, 0x50, 0x26, 0x08, 0x02, 0xc0, 0x06,
  0x6a, 0x4a, 0xea, 0x48, 0x88, 0x2a, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x6e,
  0x8e, 0x08, 0x55, 0x11, 0xd6, 0xd0, 0xd3, 0x93, 0x14, 0xd1, 0x04, 0xa1,
  0x70, 0x26, 0x08, 0xc5, 0xb3, 0x21, 0x20, 0x26, 0x08, 0x05, 0x34, 0x41,
  0x20, 0x92, 0x0d, 0xc2, 0x34, 0x6c, 0x58, 0x08, 0xe7, 0x81, 0x22, 0x69,
  0x90, 0x08, 0x88, 0xda, 0x10, 0x0c, 0x13, 0x84, 0x22, 0x9a, 0x20, 0x10,
  0xca, 0x06, 0x61, 0xc2, 0x36, 0x2c, 0x83, 0xf3, 0x40, 0x96, 0x34, 0x5c,
  0x03, 0x94, 0x4d, 0x10, 0x88, 0x65, 0x43, 0xb0, 0x4d, 0x10, 0x0a, 0x69,
  0xc3, 0xb2, 0x39, 0x0f, 0xc4, 0x49, 0x43, 0xb7, 0x41, 0x00, 0x8b, 0xa1,
  0x27, 0xa6, 0x27, 0xa9, 0x09, 0x02, 0xc1, 0x6c, 0x10, 0x26, 0x30, 0xd8,
  0xb0, 0x4c, 0xdf, 0x03, 0x45, 0xd2, 0x70, 0x4d, 0x50, 0x18, 0x6c, 0x20,
  0x2a, 0xcd, 0x13, 0x03, 0x26, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67,
  0x65, 0x74, 0x13, 0x84, 0x62, 0x9a, 0x20, 0x10, 0xcd, 0x06, 0x61, 0x32,
  0x83, 0x0d, 0x0b, 0x41, 0x06, 0x4f, 0x19, 0x44, 0xd0, 0x70, 0x11, 0xd0,
  0x19, 0x6c, 0x08, 0xd0, 0x60, 0xc3, 0x30, 0x06, 0x69, 0x00, 0x6c, 0x28,
  0x98, 0x46, 0x0d, 0x00, 0xa0, 0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a,
  0x59, 0x99, 0x1b, 0xdd, 0x94, 0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57,
  0x26, 0x37, 0x97, 0xf6, 0xe6, 0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9,
  0xd8, 0x85, 0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78,
  0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
  0x53, 0x02, 0xa4, 0x0e, 0x19, 0x9e, 0x8b, 0x5d, 0x5a, 0xd9, 0x5d, 0x12,
  0xd9, 0x14, 0x5d, 0x18, 0x5d, 0xd9, 0x94, 0x40, 0xa9, 0x43, 0x86, 0xe7,
  0x52, 0xe6, 0x46, 0x27, 0x97, 0x07, 0xf5, 0x96, 0xe6, 0x46, 0x37, 0x37,
  0x25, 0x50, 0x03, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c,
  0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14,
  0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79,
  0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e,
  0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1,
  0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc,
  0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74,
  0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a,
  0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e,
  0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e,
  0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21,
  0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0,
  0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc,
  0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72,
  0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76,
  0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f,
  0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c,
  0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03,
  0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1,
  0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61,
  0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8,
  0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94,
  0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0,
  0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76,
  0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e,
  0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f,
  0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x17,
  0x00, 0x00, 0x00, 0x06, 0xd0, 0xa4, 0xec, 0x0a, 0x6e, 0x2d, 0xd0, 0x18,
  0x44, 0x33, 0x49, 0x36, 0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c,
  0xb7, 0x5f, 0xdc, 0xb6, 0x05, 0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38,
  0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9,
  0xc5, 0x6d, 0x5b, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d,
  0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x46, 0xf0, 0x0c, 0x97, 0xef, 0x3c,
  0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x0d, 0x00, 0x00, 0x00, 0x61,
  0x20, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10,
  0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x54, 0x4a, 0x80, 0x48, 0x21,
  0xcc, 0x00, 0x94, 0x69, 0x40, 0xa1, 0x06, 0x94, 0x42, 0x71, 0x95, 0x5b,
  0xc9, 0xd0, 0x18, 0x23, 0x00, 0x41, 0x10, 0x84, 0x3f, 0x00, 0x00, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x78, 0x89, 0x85, 0x35, 0xc8, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x9f, 0xa2, 0x65, 0x51, 0x32, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x18, 0x2c, 0x9b, 0xc6, 0x28, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x84, 0x01, 0xc3, 0x6d, 0xd2, 0x32,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x18, 0x34, 0x1c, 0x47, 0x31,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0, 0x80, 0x01, 0x43, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x01, 0x13, 0x06, 0x0d, 0x31, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x8c, 0x18, 0x38, 0xc4, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x30, 0x63, 0xe0, 0x1c, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0,
  0x90, 0xc1, 0x73, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x53, 0x06,
  0xd0, 0x31, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x8c, 0x19, 0x48, 0xc7,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x67, 0x20, 0x21, 0x36, 0x1c,
  0xf2, 0xb1, 0xe2, 0x90, 0x8f, 0x09, 0x41, 0x7c, 0x0c, 0x49, 0xe4, 0x63,
  0x07, 0x23, 0x1f, 0x13, 0x82, 0xf8, 0x98, 0xe2, 0xc8, 0xc7, 0x18, 0x47,
  0x3e, 0x26, 0x04, 0xf1, 0xb1, 0xa0, 0x91, 0x8f, 0x15, 0x8d, 0x7c, 0x4c,
  0x08, 0xe2, 0x63, 0xca, 0x23, 0x1f, 0x2b, 0x24, 0xf9, 0x98, 0x10, 0xc4,
  0xc7, 0x14, 0x4a, 0x3e, 0xe6, 0x50, 0xf2, 0x31, 0x21, 0x88, 0x8f, 0x35,
  0x98, 0x7c, 0x6c, 0xd1, 0xe4, 0x63, 0x42, 0x10, 0x1f, 0x6b, 0x3a, 0xf9,
  0x18, 0xc5, 0xc9, 0xc7, 0x84, 0x20, 0x3e, 0x66, 0x7d, 0xf2, 0x31, 0x2a,
  0x0c, 0xe4, 0x63, 0x42, 0x10, 0x1f, 0x83, 0x3a, 0xf9, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0x33, 0x0a, 0x6d, 0xd0, 0x21, 0x81, 0x3d, 0x9f,
  0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xc0, 0x29, 0x85, 0x37, 0xf8,
  0x8e, 0xc0, 0x9c, 0x30, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x38, 0xa7, 0x10, 0x07, 0x61, 0x60, 0x04, 0x23, 0x06, 0x0b, 0x00, 0x82,
  0x60, 0xa0, 0xa8, 0x42, 0x1c, 0x14, 0x43, 0x50, 0x0c, 0xc1, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x30, 0xaa, 0x10, 0x07, 0x81, 0x05, 0x87, 0x7c,
  0x4c, 0x30, 0xe4, 0x63, 0x43, 0x21, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41,
  0x30, 0x50, 0x5e, 0xc1, 0x0e, 0x06, 0x21, 0x18, 0x84, 0x60, 0xc4, 0xc0,
  0x00, 0x40, 0x10, 0x0c, 0x98, 0x57, 0xb0, 0x83, 0xc0, 0x0a, 0x3b, 0x90,
  0x8f, 0x05, 0x82, 0x7c, 0xcc, 0xc0, 0x03, 0xf9, 0x58, 0x40, 0xc8, 0xc7,
  0x0e, 0x3d, 0x90, 0x8f, 0x05, 0x86, 0x7c, 0xac, 0xe0, 0x03, 0xf8, 0x18,
  0xd1, 0x07, 0xf0, 0xb1, 0xc1, 0x0f, 0xe0, 0x33, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xc8, 0x2e, 0x8c, 0x82, 0x2d, 0xd8, 0x82, 0x2b, 0x0c, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xec, 0xc2, 0x28, 0xd8, 0x82, 0x2d,
  0xa0, 0x82, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x2e, 0x8c,
  0x82, 0x2d, 0xd8, 0x42, 0x2b, 0x04, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x80, 0xec, 0xc2, 0x28, 0xd8, 0x82, 0x2d, 0xac, 0x82, 0x1f, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
